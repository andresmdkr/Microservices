openapi: 3.0.1
info:
  title: "Products API"
  version: "1.0.0"
  description: "This project provides CRUD operations for managing products."
paths:
  /api/products:
    get:
      summary: Obtener productos
      description: Retorna una lista de productos
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: No autorizado
        '403':
          description: Prohibido
    post:
      summary: Crear nuevo producto
      description: Crea un nuevo producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: No autorizado
        '403':
          description: Prohibido
  /api/products/{id}:
    put:
      summary: Actualizar producto
      description: Actualiza un producto existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID del producto a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: No autorizado
        '403':
          description: Prohibido
        '404':
          description: Producto no encontrado
    delete:
      summary: Eliminar producto
      description: Elimina un producto existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID del producto a eliminar
      responses:
        '204':
          description: Producto eliminado exitosamente
        '401':
          description: No autorizado
        '403':
          description: Prohibido
        '404':
          description: Producto no encontrado
  /api/products/find/{id}:
    get:
      summary: Comprobar existencia de producto
      description: Verifica si un producto existe por su ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID del producto a buscar
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: No autorizado
        '403':
          description: Prohibido
        '404':
          description: Producto no encontrado

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        sku:
          type: string
          example: "SKU001"
        name:
          type: string
          example: "Nombre del producto"
        description:
          type: string
          example: "Descripción del producto"
        price:
          type: number
          format: double
          example: 99.99
        quantity:
          type: integer
          example: 10
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
